@use "../../globals.scss" as *;
.container {
  width: 100%;
  max-width: 144rem;
  margin: 0 auto;
  padding-left: min(5.5vw, 8rem);
  padding-right: min(5.5vw, 8rem);
  font-family: $noto;
}
.content {
  display: flex; // Flexboxを利用して要素を横に並べる
  padding: 20px; // 余白を追加
}

.titlearea {
  margin: 0 30px;
  text-align: left;
  display: inline-block;
}

.title {
  font-size: 4.5rem; // フォントサイズ
  font-weight: 700; // フォントウェイト
  min-height: 6rem; // この値はh1の行の高さに合わせて調整
  display: block; // h1タグのデフォルトはこれが通常ですが、明示的に設定
  width: 100%; // 全幅を取るように設定
  white-space: pre; // 改行やスペースをそのまま保持
}

.visible {
  visibility: visible; // テキストが表示されるとこのスタイルが適用される
}

.redLine {
  width: 0;
  height: 6px;
  background-color: $red;
  transform-origin: left; // 左端を基準に変形
  animation: expandLine 2s forwards; // アニメーションを2秒間で一度だけ実行
}

@keyframes expandLine {
  from {
    width: 0;
  }
  to {
    width: 100%; // 最終的には100%の幅に
  }
}

// 左側のテキストセクション
.text {
  margin-top: 20px; // 上部に余白を持たせる
  flex: 1; // Flexbox内で均等にスペースを取る
  padding: 20px; // パディングで内部に余白を持たせる
}

.description {
  font-size: 1.6rem; // フォントサイズを指定
  line-height: 2.4rem; // 行間を指定
  font-weight: bold; // フォントウェイトを指定
}

// 右側の画像セクション
.imagearea {
  flex: 1; // Flexbox内で均等にスペースを取る
  padding: 20px; // パディングで内部に余白を持たせる
  display: flex; // Flexboxを利用して中身を横に並べる
  justify-content: center; // 画像を中央に配置
}

// イメージスタイル指定
.img {
  max-width: 100%; // 画像がコンテナより大きくならないように制限
  height: auto; // 高さは自動で調整
  border-radius: 10px; // 角丸にする
  object-fit: cover; // 画像をコンテナに合わせて表示
}
@media (max-width: 660px) {
  .content {
    display: flex;
    padding: 20px;
    align-items: center;
    flex-direction: column;
  }
}
